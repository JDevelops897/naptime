<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_kid_lucas</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_interactable</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>originX = x;
originY = y;

wanderPointX = x;
wanderPointY = y;

image_index = random(10);

homeX = 0;
homeY = 0;

spd = 1;

atHome = false;

dad = noone;
mom = noone;

facing = 0;

sleeping = 0;

image_speed = .05;

trust = 0;
fear = 0;

dir = 0;

sightRange = 128;
soundRange = 256;

hasSeenPlayer = false;
lastSeenCostume = Outfits.Last;

state = 0;

dialogue = noone;

enum States {
    Wander,
    Candy,
    FollowPlayer,
    Sleep,
    Flee,
    GoHome,
    None
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>moving = false;
switch (state) {
    case States.Wander:
        if (distance_to_point(wanderPointX, wanderPointY) &gt; 3) {
            dir = point_direction(x, y, wanderPointX, wanderPointY);
            if wanderPointX &gt; x facing = 1 else if wanderPointX &lt; x facing = 0;
            if (point_distance(x, y, wanderPointX, wanderPointY) &gt; 3 ) {
                if (instance_exists(obj_candy)) {
                    if (distance_to_object(instance_nearest(x,y, obj_candy)) &lt; sightRange) {
                        dir = point_direction(x, y, instance_nearest(x,y, obj_candy).x, instance_nearest(x,y, obj_candy).y);
                    }
                }
                //move player in direction with speed
                if (place_free (x + lengthdir_x (spd, dir), y)) {
                    x += lengthdir_x(spd, dir);
                    moving = true;
                }
                if (place_free (x, y + lengthdir_y (spd, dir))) {
                    y += lengthdir_y(spd, dir); 
                    moving = true;
                }
            }
        } else {
            moving = false;
            if (floor(random(60)) == 0) {
                wanderPointX = originX-50+random(100);
                wanderPointY = originY-50+random(100);
                if (!place_free(wanderPointX, wanderPointY)) {
                    wanderPointX = x;
                    wanderPointY = y;
                    if (dialogue == noone) {
                        dialogue = instance_create(x, y, obj_dialogue);
                        dialogue.text = choose ("I love Halloween!", "Can I go home now?", "Who gives an apple on Halloween?", "I wanted the king-sized Snackers", "YEET", "Welcome to chili's!", "I just want to play Fortnite.", "My minecraft girlfriend is waiting.", "God, I wanna die");
                        dialogue.target = self;
                    }
                }
            }
        }
        break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_candy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (other) instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_colour(c_white);
draw_self();

if global.debug {    
    //dir = point_direction(x, y, obj_player.x, obj_player.y);
    
    draw_set_colour(c_blue);
    
    draw_line(x+lengthdir_x(sightRange, dir-30), y+lengthdir_y(sightRange, dir-30), x+lengthdir_x(sightRange, dir), y+lengthdir_y(sightRange, dir));
    draw_line(x, y, x+lengthdir_x(sightRange, dir-30), y+lengthdir_y(sightRange, dir-30));
    draw_line(x+lengthdir_x(sightRange, dir), y+lengthdir_y(sightRange, dir), x+lengthdir_x(sightRange, dir+30), y+lengthdir_y(sightRange, dir+30)); 
    draw_line(x, y, x+lengthdir_x(sightRange, dir+30), y+lengthdir_y(sightRange, dir+30));

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
