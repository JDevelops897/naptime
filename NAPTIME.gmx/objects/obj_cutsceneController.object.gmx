<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dialogue0 = "Mortal;Bring me the souls of 5 children;DO NOT QUESTION ME!;";
d0 = "";
dialogue1 = "What is it, Master?;But...;....Yes, Master";
d1 = "";

lock = true;

tickPerSecond = 7.5;
tick = 0;
endOfLine = false;
endOfDialogue = false;

speaking = 0;

alarm[1] = 120;

count = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>lock = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>endOfLine = false;
if (speaking == 0) {
    d1 = "";
    speaking = 1;
} else if (speaking == 1) {
    d0 = "";
    speaking = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if lock exit;
tick++;
if (tick &gt; 60/tickPerSecond) {
    if (!endOfLine) {
        //char 0 speaking
        if (speaking == 0) {
            //if more dialogue exists
            if (dialogue0 != "") {
                //if next char is endline
                if (string_char_at(dialogue0, 0) == ";") {
                    //end of line
                    endOfLine = true;
                    //alarm to go to next speaker
                    alarm[0] = 30;
                    //delete delimiter
                    dialogue0 = string_delete(dialogue0, 1, 1);
                //next char is not endline
                } else {
                    d0 += string_char_at(dialogue0, 0);
                    dialogue0 = string_delete(dialogue0, 1, 1);
                }
            //no more dialogue exists for this char
            } else {
                //end of line
                endOfLine = true;
                //alarm to go to next speaker
                alarm[0] = 30;
            }
        //char 1 speaking
        } else if (speaking == 1) {
            //if more dialogue exists
            if (dialogue1 != "") {
                //if next char is endline
                if (string_char_at(dialogue1, 0) == ";") {
                    //end of line
                    endOfLine = true;
                    //alarm to go to next speaker
                    alarm[0] = 30;
                    //delete delimiter
                    dialogue1 = string_delete(dialogue1, 1, 1);
                //next char is not endline
                } else {
                    d1 += string_char_at(dialogue1, 0);
                    dialogue1 = string_delete(dialogue1, 1, 1);
                }
            //no more dialogue exists for this char
            } else {
                //end of line
                endOfLine = true;
                //end of total dialogue
                endOfDialogue = true;
            }
        }
    }
    //reset tick counter
    tick = 0;
}

//player hits space, end line or go to next line
if (keyboard_check_pressed(vk_anykey)) {


    //TEMP end of dialogue
    if (endOfDialogue) {
        with (instance_create(0, 0, obj_fadeToRoom)) {
            targetRoom = room_levelTransition;
            fadeSeconds = 1;
        }
        exit;
    }
    
    //if the line is already ended
    if (endOfLine) {
        //start next line
        alarm[0] = 1;
    //if the line is not yet ended
    } else {
        //end the line
        //if char 0 speaking
        if (speaking == 0) {
            //catch up text
            for (i = 0; i &lt; string_length(dialogue0)+1; i++) {
                d0 += string_char_at(dialogue0, 0);
                dialogue0 = string_delete(dialogue0, 1, 1);
                if (dialogue0 == "") break;
                //delete delimiter
                if (string_char_at(dialogue0, 0) == ";") {
                    dialogue0 = string_delete(dialogue0, 1, 1);
                    break;
                }
            }
            //end line
            endOfLine = true;
            alarm[0] = 30;
        } else {
            //catch up text
            for (i = 0; i &lt; string_length(dialogue1)+1; i++) {
                d1 += string_char_at(dialogue1, 0);
                dialogue1 = string_delete(dialogue1, 1, 1);
                //if it's the end of string, end dialogue
                if (dialogue1 == "") {
                    endOfDialogue = true;
                    break;
                }
                //delete delimiter
                if (string_char_at(dialogue1, 0) == ";") {
                    dialogue1 = string_delete(dialogue1, 1, 1);
                    break;
                }
            }
            //end line
            endOfLine = true;
            //only switch dialogue if there's more dialogue
            if !endOfDialogue alarm[0] = 30;
        }
    }
}

if keyboard_check_pressed (vk_escape)
    {
        endOfDialogue = true;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>count += 1/6;
draw_set_font(fnt_cutscene);
draw_set_colour(c_black);
draw_set_halign(fa_center);
draw_sprite(spr_cutsceneBack1, count, 0, 0);
//draw_sprite(spr_cutsceneChar1, 0, x-100, y+120)
//draw_sprite(spr_cutsceneChar2, 0, x+100, y+120)
draw_set_colour(c_black);
draw_text(x+1, y+1, d0);
draw_set_colour(c_red);
draw_text(x, y, d0);
draw_set_colour(c_black);
draw_text(x+1, y+76, d1);
draw_set_colour(c_white);
draw_text(x, y+75, d1);

if (endOfDialogue) {
    draw_set_colour(c_black);
    draw_text(x+1, 11, "Press any key to continue");
    draw_set_colour(c_white);
    draw_text(x, 10, "Press any key to continue");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
